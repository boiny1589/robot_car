#使用前安装以下内容
#sudo apt-get install ros-melodic-teb-local-planner
#sudo apt-get install ros-melodic-teb-local-planner-tutorials

TebLocalPlannerROS:

 odom_topic: /odom
#  odom_topic: /robot_pose_ekf/odom_combined
 #map_frame: /odom
 map_frame: /map

 # Trajectory
 teb_autosize: True #优化期间允许改变轨迹的时域长度
 dt_ref: 0.5 #局部路径规划的解析度# minimum 0.01
 dt_hysteresis: 0.1 #允许改变的时域解析度的浮动范围， 一般为 dt_ref 的 10% 左右 minimum0.002
 global_plan_overwrite_orientation: False #覆盖全局路径中局部路径点的朝向
 max_global_plan_lookahead_dist: 1.0 #考虑优化的全局计划子集的最大长度
 feasibility_check_no_poses: 10 #检测位姿可到达的时间间隔 minimum 0

 # Robot
 max_vel_x: 0.5 #最大x前向速度
 max_vel_y: 0.5 # default 0.1最大y前向速度
 speed_reduce_renge: 0.60
 speed_reduce_range_factory: 0.40 #不能为0
 speed_reduce_factory: 1.5
# max_vel_x: 0.7
 max_vel_x_backwards: 0.5 #Maximum translational velocity of the robot for driving backwards
 max_vel_theta: 2.5 # default=0.4 最大转向角速度
 min_vel_theta: -2.5
 min_in_place_vel_theta: 1.0
# max_vel_theta: 1.5
 acc_lim_x: 1.00  #最大x向加速度 同样约束减速过程,若电机性能良好且速度不快可以立即刹车可以设置为0
 acc_lim_y: 1.00  #最大y向加速度
 acc_lim_theta: 2.50  # default 0.00 最大角加速度
 min_turning_radius: 0.0  #车类机器人的最小转弯半径
 footprint_model: #用于优化的足迹模型(与通用配置文件中的footprint不通用)，该模型对于距离计算的复杂性和计算时间至关重要。与后面的参数min_obstacle_dist一起使用。
  type: "polygon" #多边形类型，默认”point”。
  #vertices: [[-0.133, -0.125], [-0.133, 0.125],[0.133,0.125],[0.133, -0.125]]  #多边形端点坐标 for mini_mec
  #vertices: [[-0.20, -0.32], [-0.20, 0.32],[0.20,0.32],[0.20, -0.32]]  #多边形端点坐标 for senior_mec_no
  vertices: [[-0.15, -0.15], [-0.15, 0.15], [0.15, 0.15], [0.15, -0.15]]
  #vertices: [[-0.29, -0.27], [-0.29, 0.27],[0.29,0.27],[0.29, -0.27]]  #多边形端点坐标 for senior_mec_dl
  #vertices: [[-0.380, -0.330], [-0.380, 0.330],[0.380,0.208],[0.380, -0.330]]  #多边形端点坐标 for top_mec_bs
  #vertices: [[-0.280, -0.313], [-0.280, 0.313],[0.280,0.313],[0.280, -0.313]]  #多边形端点坐标 for top_mec_dl
  #外形尺寸，type为形状类型，vertices为形状尺寸，不同的类型对应不同尺寸格式(注意缩进)。
  #type有"point", "circular", "two_circles", "line", "polygon"等类型，不同类型有不同的尺寸格式，如”line”类型对应格式”line_start”、”line_end”。
  #line_start: [0.00, 0.0] # for type "line" senior_akm`
  #line_end: [0.7, 0.0] # for type "line" top_akm_bs
  #radius: 0.3 # for type "circular"
  #front_offset: 0.2       #for type "two_circles"
  #front_rasius: 0.2       #for type "two_circles"
  #rear_offset : 0.2       #for type "two_circles"
  #rear_rasius : 0.2       #for type "two_circles"
  #可参见官方说明：http://wiki.ros.org/teb_local_planner/Tutorials/Obstacle%20Avoidance%20and%20Robot%20Footprint%20Model

 # GoalTolerance

 xy_goal_tolerance: 0.03 # default 0.03目标 xy 偏移容忍度  minimum 0.001 maximum 0.2
 yaw_goal_tolerance: 0.03 # default 0.02目标 角度 偏移容忍度 minimum 0.001 maximum 0.1
 free_goal_vel: False  #允许机器人以最大速度驶向目的地
 oscillation_reset_dist: 0.05 # default 0.05 机器人必须运动多少米远后才能复位震荡标记
 # Obstacles

 min_obstacle_dist: 0.02 # default 0.02 和障碍物最小距离
 include_costmap_obstacles: True  #是否将动态障碍物预测为速度模型，
 costmap_obstacles_behind_robot_dist: 0.50  #限制机器人后方规划时考虑的局部成本地图障碍物
 obstacle_poses_affected: 7   #障碍物姿态受影响0~30
 costmap_converter_plugin: ""
 costmap_converter_spin_thread: True
 costmap_converter_rate: 5

 # Optimization

 no_inner_iterations: 3  #default 3 被外循环调用后内循环执行优化次数
 no_outer_iterations: 2  #default 2 执行的外循环的优化次数
 optimization_activate: True  #激活优化，
 optimization_verbose: False # default False 打印优化过程详情
 penalty_epsilon: 0.1 # dafault 0.0 对于硬约束近似，在惩罚函数中添加安全范围
 weight_max_vel_x: 1 #最大x速度权重0~2
 weight_max_vel_y: 1 #最大y速度权重0~2
 weight_max_vel_theta: 1  #最大w速度权重0~1
 weight_acc_lim_x: 1  #最大x 加速度权重0~1
 weight_acc_lim_y: 1  #最大y 加速度权重0~1
 weight_acc_lim_theta: 1 #最大w 加速度权重 0~1
 weight_kinematics_nh: 1 #满足非完整运动学的最优权重
 weight_kinematics_forward_drive: 1   # deafult 0 优化过程中，迫使机器人只选择前进方向，差速轮适用
 weight_kinematics_turning_radius: 1 # 优化过程中，车型机器人的最小转弯半径的权重
 weight_optimaltime: 3.0  #优化过程中，基于轨迹的时间上的权重， default 1.0
 weight_inflation: 0.0 #default 0.1
 inflation_dist: 0.67 #default 0.6
 weight_obstacle: 20  #优化过程中，和障碍物最小距离的权重，0~50
 weight_dynamic_obstacle: 10 # not in use yet  优化过程中，和动态障碍物最小距离的权重 0~50
 selection_alternative_time_cost: False # not in use yet

 # Homotopy Class Planner

 enable_homotopy_class_planning: False
 enable_multithreading: True  #允许多线程并行处理
 simple_exploration: False
 max_number_classes: 4 #允许的线程数
 roadmap_graph_no_samples: 15  #指定为创建路线图而生成的样本数
 roadmap_graph_area_width: 5  #指定在开始和目标之间生成采样的区域的宽度[m]
 h_signature_prescaler: 0.5  #标度障碍物的数量
 h_signature_threshold: 0.1
 obstacle_keypoint_offset: 0.1
 obstacle_heading_threshold: 0.45  #障碍物前进阈值
 visualize_hc_graph: False #可视化为探索新同伦类而创建的图
 allow_init_with_backwards_motion: True
 # 是否是全向移动机器人
 holonomic_robot: True
 # Forward Simulation Parameters，前进模拟参数
 sim_time: 2.0 # default 0.8 ,提高此参数能有效提高运行轨迹的平滑，一般1~2
 vx_samples: 20 # default 18  在 x 方向上进行速度采样时平移部分的量
 vtheta_samples: 40 # default 20  控制速度采样中旋转部分的量,倾向于设置 vth_samples 的值大于平移部分的值
 sim_granularity: 0.05

 path_distance_bias: 35 # 本地规划器与全局路径保持一致的权重，值越大，local_planner就会更倾向于跟踪全局路径。
 goal_distance_bias: 20 # 机器人尝试到达目标点的权重，值越大，机器人与全局路径的一致性偏低
 occdist_scale: 0.02 # 成本函数中障碍物距离的权重

